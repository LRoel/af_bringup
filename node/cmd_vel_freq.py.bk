#!/usr/bin/env python
# -*- coding: utf-8 -*-

import rospy
import threading
import math
import time
from geometry_msgs.msg import Twist


class FreqCmd:
    def __init__(self):
        rospy.init_node('cmd_vel_freq')
        self.cmd_vel = Twist()
        rospy.Subscriber('/cmd_vel', Twist, self.cmd_cb)
        self.pub = rospy.Publisher('/cmd_vel_freq', Twist, queue_size=100)
        self.pub_time = rospy.Time.now()
        self.cmd_time = rospy.Time.now()

        t1 = threading.Thread(target=self.pub_cmd)
        t1.start()

        rospy.spin()

    def cmd_cb(self, msg):
        self.cmd_vel.linear.x = msg.linear.x
        self.cmd_vel.angular.z = msg.angular.z
        self.cmd_time = rospy.Time.now()

    def pub_cmd(self):
        rate = rospy.Rate(20)
        while not rospy.is_shutdown():
            self.pub_time = rospy.Time.now()
            if self.pub_time - self.cmd_time >= rospy.Duration(1):
                continue
            else:
                self.pub.publish(self.cmd_vel)
            rate.sleep()


def freq_cmd():
    FreqCmd()


if __name__ == '__main__':
    freq_cmd()
